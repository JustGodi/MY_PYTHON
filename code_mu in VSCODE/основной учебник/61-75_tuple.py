"""В данном разделе вам предстоит познакомиться с кортежам - типом данных, характерным только для Python. По своей сути кортежи похожи на списки, т.к. тоже хранят набор определенных значений. Но в отличии от них, кортежи неизменяемы - нельзя добавлять, изменять или удалять элементы в самом исходном кортеже. Все данные кортежа заключены в круглые скобки:

tpl = ('a', 'b', 'c')
Кортежи широко используются в тех случаях, когда нужно защитить данные от случайных изменений. Также кортежи занимают меньший объем памяти, чем списки такой же длины. Поэтому их применяют и для экономии оперативной памяти."""

# создание кортежа
"""tpl_1 = ( 1, 2, 3, 4, 5 )
tpl_2 = ( 'a', 'b', 'c', 'd', 'e' )
tpl_3 = ( True, False )
tpl_4 = ( [ 1, 2, 3 ], [ 'a', 'b', 'c' ] )
print( tpl_1, tpl_2, tpl_3, tpl_4 )
print( type( tpl_1 ), type( tpl_2 ), type( tpl_3 ), type( tpl_4 ) )"""

#альтернативный способ создать кортеж при помощи функции tuple()
"""tpl_1 = tuple( '12345' )
print( tpl_1 )
txt_1 = 'abcde'
tpl_2 = tuple( txt_1 )
print( tuple( txt_1 ), tpl_2 )
num_1 = 12345
txt_2 = str( num_1 )
tpl_3 = tuple( str( num_1 ) )
tpl_4 = tuple( txt_2 )
print( tuple( str( num_1 ) ), tpl_3, tpl_4 )"""

#кортеж из одного элемента после элемента нужно обязательно ставить висячую запятую:
"""tpl_1 = ( 'a', )
print( tpl_1 )"""

#альтернативный синтаксис для записи кортежа, без круглых скобок, но так незя делать
"""tpl_1 = 'a', 'b', 'c', 'd'
print( tpl_1, type( tpl_1 ) )"""

#отдельный элемент кортежа по индексу
"""Tpl_1 = ( 'a', 'b', 'c', 1, 2, 3 )
print( Tpl_1[0], Tpl_1[3] )
print( Tpl_1[3] + Tpl_1[4] + Tpl_1[-1] )"""

#попытка изменения элементов кортежа приведет к ошибке, т.k. кортеж содержит неизменяемые данные
"""Tpl_1 = ( 1, 2, 3, 4, 5 )
Tpl_1[0] = 2
print( Tpl_1 )"""

#длина кортежа при помощи функции len()
"""Tpl_1 = ( 1, 2, 3, 4, 5 )
print( len( Tpl_1 ) )"""

#обЪединение кортежей с помощью оператора +
"""Tpl_1 = ( 'a', 'b', 'c' )
Tpl_2 = ( 'd', 'e', 'f' )
print( Tpl_1, Tpl_2 )
Res_1 = Tpl_1 + Tpl_2
Tpl_1 += Tpl_2
print( Res_1, type(Res_1), Tpl_1 )"""
#данные  кортежах не изменяемы, но сами кортежи можно изменить

#умножение кортежей
"""Tpl_1 = ( 'a', 'b' )
print( Tpl_1, Tpl_1 * 2 )
print( Tpl_1 * 2 )"""

#наличие элемента в кортеже при помощи оператора in
"""Tpl_1 = ( 1, 2, 3, 4, 5, 'abcd', 12 )
Res_1 = 3 in Tpl_1
Res_2 = 'a' in Tpl_1
Res_3 = 5 not in Tpl_1
Res_4 = 'b' not in Tpl_1
Res_5 = 'd' in Tpl_1
Res_6 = '1' in Tpl_1
Res_7 = '12' in Tpl_1
Res_8 = 12 in Tpl_1
print( Res_1, Res_2, Res_3, Res_4, Res_5, Res_6, Res_7, Res_8 )"""

#Распаковка кортежей это назначить каждому элементу отдельную переменную. Для этого в левой части выражения перечисляются переменные, а в правой части указывается нужный нам кортеж:
"""Tpl1 = ( 1, 2, 3 )
Num1, Num2, Num3 = Tpl1
Sum1 = Num1 + Num2 + Num3
print( Num1, Num2, Num3, Sum1, Num1 + Num2 + Num3 )"""
##Но здесь есть важный нюанс - количество переменных должно совпадать с количеством элементов в кортеже. Иначе вернется ошибка:
"""Tpl2 = ( 1, 2, 3, 4)
Tpl3 = ( 1, 2 )
Num4, Num5, Num6 = Tpl2
Num7 = Tpl3
print( Num4, Num5, Num6, Num7 )"""

"""Tpl_1 = ( 'John', 'Smith' )
Name1, SecName1 = Tpl_1
print( Name1, SecName1 )"""

#Функция tuple позволяет не только создавать кортеж, но и преобразовывать в него различные объекты, например, строки, списки.
"""Txt1 = 'abcdef'
Tpl1 = tuple( Txt1 )
print( Tpl1 )
Lst1 = [ 'a', 'b', 'c', 'd' ]
Tpl2 = tuple( Lst1 )
print( Tpl2 )
Num1 = 12345
#Tpl3 = tuple( Num1 )
#выдало ошибку "TypeError: 'int' object is not iterable" надо так:
Txt2 = str(  Num1 )
Tpl3 = tuple( Txt2 )
#aeyrbz tuple() принимает данные только типа стринг
print( Tpl3 )"""

#реобразование кортежа в список при помощи функции list()
"""Tpl1 = ( 1, 2, 3, 4, 5, 'a', 'b', 'c', 'd', 'e', '1', '2' )
Lst1 = list( Tpl1 )
print( Tpl1, Lst1, type( Tpl1 ), type( Lst1 ) )"""
"""Tpl1 = ( 1, 2, 3 )
Tpl2 = ( 4, 5 )
Res1 = list(Tpl1 + Tpl2)
print( Res1 )"""
"""Tpl1 = ( 1, 2, 3, 4, 5 )
Lst1 = list( Tpl1 )
print( type( Tpl1 ), type( Lst1 ), Tpl1, Lst1 )
Lst1.sort( reverse = True )
print( Lst1, type( Lst1 ) )
Tpl1 = tuple( Lst1 )
print( Tpl1 )"""

#слияние кортежа в строку
'''Tpl1 = ( 'a', 'b', 'c' )
Txt1 = ', '.join( Tpl1 )
print( Tpl1, Txt1 )'''
"""Tpl2 = ( 1, 2, 3, 'a', 'b', 'c' )
Txt2 = '/'.join( Tpl2 )
print( Tpl2, Txt2 )"""
#закомментированный код выше не работает т.к. найдены цифры, т.е. работает только с типом строка
"""Tpl2 = ( '1', '2', '3', 'a', 'b', 'c' )
Txt2 = '/'.join( Tpl2 )
print( Tpl2, Txt2 )"""