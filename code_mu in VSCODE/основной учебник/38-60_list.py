#Списки можно создавать с помощью квадратных скобок, их содержимое будет содержимым списка
#list1 = []

#Создание списка с помощью функции list
#list1 = list( '1' )
#чтобы добавить несколько элементов в список с помощью ф-ии list() можно их перечислить подряд
#list2 = list( '1234' )
#нельзя передавать в ф-ию list() цифры, только строки
#list3 = list(1234) #выдаст ошибку
#print( list1, list2 )

#разбиение строки в список при помощи метода .split(), в скобках нужно указать символ в '' которым будет производится деление и он должен быть указан в строке, Если в метод split не передать разделитель, то он просто преобразует всю строку в один элемент списка, пустые ковычки нельзя вставлять, лучше их вообще не ствить
"""txt1 = '1-2-3-4'
txt2 = '1-2-3-4'
txt3 = '1,2,3,4,'
txt4 = '1_23_45'
txt5 = '12 34 56'
print( txt1, txt2, txt1.split(), txt2.split('-'), txt3.split(','), txt4.split('_'), txt5.split(' ') )"""

#получение отдельного элемента списка
"""list1 = list('abcde')
print( list1[0], list1[1], list1[2], list1[3], list1[4], list1[-1] )"""

#длина списка
"""list1 = list('12345')
txt1 = '12abc34'
list2 = list(txt1)
print( len(list1), list2, len(list2) )"""

#последний элемент списка
"""list1 = list('12345')
print(list1[-1])"""

#изменение элементов списка
"""list1 = list('12345')
list2 = list('abcde')
list1[0] = 5
print( list1, list1[0] )
list1[-1] = 1
print( list1, list1[-1] )
list1[-2] = list2[-2]
print( list1, list2, list1[-2] )"""

#добавление элементов в конец списка, при помощи метода .append()
"""lst1 = list( '123' )
lst1.append( '4' )
lst2 = list( '' )
lst2.append( '1' )
lst3 = list( ' ' )
lst3.append('1') #если создан лист вообще без символов(пробела) то при добавлениее элемента в конец списка при помощи метода .append() список будет состоять из одного элемента, если есть хотя бы пробел то из пробела и добавленного элемента
lst4 = list( '' )
lst4.append('a')
lst4.append('b')
lst4.append('c')
print( lst1, lst2, lst3, lst4 )"""

#добавление элементов по позиции в список при помощи метода .insert(1, '1'), в первый параметр задаётся индекс нужного элемента после которого будет вставлен наш элемент, во второй параметр указывается добавляемый элемент. Индексация элементов в методе .insert(1, '1') Начинается с 1, поэтому если указать в индекс 0, то он добавит элемент в начало списка. ДОБАВЛЯТЬ НЕ ОБЯЗАТЕЛЬНО СТРОКУ, МОЖНО И ЧИСЛО
'''
lst1 = list( 'abcd' )
print( lst1 )
lst1.insert( 1, '2' )
print( lst1 )

lst2 = list( '1234' )
print( lst2 )
lst2.insert( 2, 'A' )
print( lst2 )

lst3 = list( '1234' )
print( lst3 )
lst3.insert(0, '5')
lst3.insert(0, 5)
print( lst3 )
'''
#объединение списков методом .extend(list), список который мы хотим добавить будет добавлен в конец списка
"""lst1 = list( '123' )
lst2 = list( 'ABC' )
print( lst1, lst2 )
lst1.extend(lst2)
print( lst1, lst2 )"""

#Объединение списков при помощи оператора +
"""lst1 = list( '1234' )
lst2 = list( '5678' )
lst3 = lst1 + lst2
print( lst3 )"""

#обединять можно и при помощи +=, изменяя первый список
"""lst1 = list( '1234' )
lst2 = list( '5678' )
lst1 += lst2
print( lst1 )"""

#удаление определеного элемента оператором(функицей) del
"""lst1 = list( '12345' )
print( lst1 )
del lst1[4]
print( lst1 )"""

#удаление элементов из списка по их значению при помощи метода .remove(значение)
'''lst1 = [1, 2, 3, 4, 5, 1, 'a', 'b', 'c']
lst2 = list( '12345' )
print( lst1, lst2, type( lst1 ), type( lst2 ), type( lst1[0] ), type( lst2[0] ) )
#почему lst1.remove( 1 ) не работает если объявить список через функцию lst1 = list( '12345' )
lst1.remove( 1 )
lst2.remove( '1' )
print( lst1, lst2 )'''
#потомуто в функции list('') весь список является строкой
'''lst1 = [1, 2, 3, 4, 5]
dlt = lst1.remove(1)
print(lst1, dlt)'''


#получение и уадление элемента из списка
#если нужно удалить элемент из списка но при этом вывести его то метод .pop(index)
'''lst1 = [ 1, 2, 3, 4, 5 ]
print(lst1)
dlt = lst1.pop(0)
print(lst1, dlt, lst1[0])
#чтобы удалить последни элемент нужно оставить скобки пустми
lst2 = [ 1, 2, 3, 4, 5 ]
print( lst2, lst2.pop(), lst2 )
lst3 = [ 1, 2, 3, 4, 5 ]
print( lst3 )
dlt1 = lst3.pop()
dlt2 = lst3.pop(1)
print( dlt1, dlt2, lst3 )
print(lst1)'''
'''lst1 = [ 1, 2, 3, 4, 5]
lst2 = []
print(lst2, lst1)
lst2.append(lst1.pop(0))
print(lst2, lst1)'''

#удаление всех элементов из списка при помощи метода .clear()
"""lst1 = [ 1, 2, 3, 4, 5 ]
print( lst1 )
lst1.clear()
print( lst1 )"""
"""lst1 = [1, 2, 3, 4, 5]
clr = lst1.clear()
print(lst1, clr)"""

#поиск индекса элемента списка по его значению при помощи метода .index(value)
"""lst1 = [ 1, 2, 'a', 3, 4, 5 ]
num1 = 2
txt1 = 'a'
print( lst1.index( 4 ), lst1.index( num1 ), lst1.index( txt1 ), lst1.index( 'a' ) )"""

#проверка наличия элемента в списке при помощи оператора in
"""lst1 = [ 1, 2, 3, 4, 5 ]
res1 = 1 in lst1
res2 = 'a' in lst1
print( res1, res2 )"""

#подсёт элементов в списке методом .count(value)
'''
lst1 = [ 1, 2, 3, '1', 'a', 1, 2, 3, 'a', '1', 1, 2, 3, 'a', '1', 1, 2, 3, 'a', '1' ]
res1 = lst1.count( 1 )
num1 = 2
res2 = lst1.count(num1)
res2 = lst1.count( 2 )
txt1 = '1'
res3 = lst1.count( txt1 )
print( res1, res2, lst1.count( 3 ), res3, lst1.count( 'a' ) )
'''

#обратный порядок элементов в списке при помощи метода .reverse()
"""lst_1 = [ 1, 2, 3, 4, 5 ]
print( lst_1 )
lst_1.reverse()
print( lst_1 )"""

#сортировка элементов в исходном списке методом .sort()
"""
lst_1 = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ]
print( lst_1 )
lst_1.sort( reverse = True )
print( lst_1 )
lst_1.sort()
print( lst_1 )
lst_2 = [ 'a', 'b', 'c' ]
lst_3 = [ 3, 2, 1 ]
print( lst_2, lst_3 )
lst_2.sort( reverse = True )
lst_3.sort( )
print( lst_2, lst_3 )
lst_3.extend( lst_2 )
print( lst_3 )
"""

#сортировка элементов в копии списка при помощи функции sorted(). В ее параметре указываем список. Функция возвращает копию исходного списка с измененным порядком элементов. Если во втором необязательном параметре функции указать значение reverse=True, то элементы отсортируются по убыванию.
"""lst_1 = [ 1, 2, 3, 4, 5]
print( lst_1 )
lst_1_srt_rev = sorted( lst_1, reverse = True )
print( lst_1_srt_rev )
print( lst_1 )
lst_2 = [ 'f', 'e', 'd', 'c', 'b', 'a' ]
print( lst_2 )
lst_2_srt = sorted( lst_2 )
print( lst_2 )
print( lst_2_srt )"""

#слияние списка в строку при помощи метода .join(). Метод применяется к строке, которая будет выступать в качестве разделителя, а в параметре метода указывается сливаемый список. Работает тольо со строковым типом даннх
'''lst_1 = [ '1', '2', '3', '4', '5' ]
lst_1_jn = '-'.join( lst_1 )
print( lst_1, lst_1_jn )'''
'''lst_1_2_jn = ''.join( lst_1 )
print( lst_1_2_jn )
lst_1_3_jn = ' '.join( lst_1 )
print( lst_1_3_jn, type(lst_1_3_jn) )'''